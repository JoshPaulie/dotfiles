# shellcheck disable=SC2148,SC1091
#                    ^ Don't require shebang
#                           ^ Ignore sourcing issues

export EDITOR="nvim"

# Prompt
eval "$(starship init zsh)"

# Zsh Plugins
source "$HOME/dotfiles/zsh/zsh-plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "$HOME/dotfiles/zsh/zsh-plugins/zsh-vi-mode/zsh-vi-mode.plugin.zsh"
source "$HOME/dotfiles/zsh/zsh-plugins/catppuccin-zsh-syntax-highlighting/themes/catppuccin_macchiato-zsh-syntax-highlighting.zsh"
source "$HOME/dotfiles/zsh/zsh-plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
export ZSH_HIGHLIGHT_HIGHLIGHTERS_DIR="$HOME/dotfiles/zsh/zsh-plugins/zsh-syntax-highlighting/highlighters"

# Pyenv (python version manager)
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# No pip install outside of venv
export PIP_REQUIRE_VIRTUALENV=true

# Python helper
venv() {
    # Don't make in home dir
    if [[ "$PWD" = "$HOME" ]]; then
        echo "You shouldn't make a virtual environment in the home directory."
        return 1
    fi

    # If already an active venv, deactivate it and halt
    if [[ $VIRTUAL_ENV ]]; then
        deactivate
        return 0
    fi

    # Create venv if doesn't exist in cwd
    [ -d ".venv" ] || python -m venv .venv

    # Activate venv
    source ".venv/bin/activate"
}

# Fzf
# shellcheck disable=SC1090
source <(fzf --zsh)

# Homebrew
export HOMEBREW_NO_ENV_HINTS=1
export HOMEBREW_NO_AUTO_UPDATE=1

# Case insensitive completion
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=* r:|=*'
autoload -Uz compinit && compinit
setopt MENU_COMPLETE

# Zsh/Terminal aliases and functions
export DOTFILES="$HOME/dotfiles"
export ZSHRC="$HOME/.zshrc"
export NVIM="$HOME/.config/nvim"

alias ..="cd .."
alias ~='cd $HOME'
alias zshrc='nvim $ZSHRC && source $ZSHRC && echo  Sourced .zshrc'
alias dotfiles='cd $DOTFILES'
alias dot="dotfiles"
alias c="clear"
alias mv="mv -v"
alias cp="cp -v"

mkcd() {
    mkdir "$1" && cd "$1" || return 1
}

export DEV_DIR="$HOME/dev"
dev() { # cd to ~/dev (or) specific dir in ~/dev
    new_dev_dir="$DEV_DIR/$1"
    mkdir -p "$new_dev_dir"
    cd "$new_dev_dir" || return 1
}

export TEMP_DIR="$HOME/tmp"
tmp() { # cd to ~/tmp (or) specific dir in ~/tmp
    new_tmp_dir="$TEMP_DIR/$1"
    mkdir -p "$new_tmp_dir"
    cd "$new_tmp_dir" || return 1
}

tmp-clear() {
    rm -rfI "$TEMP_DIR"
}

cpath() { # Copy file path to clipboard
    FILE_PATH=$(readlink -f "$1")
    echo "$FILE_PATH" | pbcopy
}

clines() { # Copy file contents to clipboard
    pbcopy < "$1"
}

notify() {
    osascript -e "display notification \"$1\" with title \"📣\""
}

# Oxidized coreutil replacements
alias ls="eza -l --icons --ignore-glob=.git --group-directories-first"
alias lsa="ls -a"
alias grep="rg"
alias find="fd"
alias cat="bat -p"

# Pretty manpages
export MANPAGER="sh -c 'col -bx | bat -l man -p'"

# Git
gcommit() {
    git commit -m "$1"
}
alias ginit='git init'
alias gpush='git push'
alias gpull='git pull'
alias gadd='git add'
alias gstat='git status'
alias gdiff='git diff'

# App abbreviations
alias ff="fastfetch"
alias lg="lazygit"
alias v="nvim"
alias n="nvim"
alias neo="nvim"
alias py="python"
alias y="yazi"
